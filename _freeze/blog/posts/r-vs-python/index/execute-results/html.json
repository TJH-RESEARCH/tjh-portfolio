{
  "hash": "f20c6f4b11ad73b7c7965d0abe551fcd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R vs. Python\"\n#description: \"\"\nauthor:\n  - name: Tommy Hodges\n    orcid: 0000-0002-5184-7346\n    affiliation: Center for the Advancement of Military and Emergency Services Research, Kennesaw State University\naffiliation-url: https://www.kennesaw.edu/research/centers-facilities/ames-center/index.php\ndate: 2025-06-11\n#categories: \\[R, Statistics, Research Design\\] \\# self-defined categories\n#citation: \n#  url: https://samanthacsik.github.io/posts/2022-10-24-my-blog-post/ \n#image: \ndraft: true\n---\n\n\n\nR gets a bad rap among data scientists, or at least some of them. I'm thinking of the data scientists I meet who sneer when I tell them I use R. Or of Jon Krohn, of the Super Data Science Podcast, a great show, but whose host Jon Krohn make disparaging remarks about R (\"does anyone learn R nowadays?\"). \\[cite\\]\n\nWe are told, often with no justification, that Python is better than R for production. That Python is better than R for machine learning. That R is good for statistics, but that's about it. These conventional quips are not entirely wrong, but there are a bit misleading. First of all, there is nothing you can do in Python that you cannot do in R, and vice versa.\n\nThey are both very similar in terms of there capabilities for data science. When new statistics and machine learning techniques are created, they are often made for both languages. When one language gets a new capability first, it is quickly ported to the other. These ports can even be identical. Take for example [ggplot2](https://ggplot2.tidyverse.org), the amazing graphics package for R. It is based on the \"[grammar of graphics](https://ggplot2-book.org)\" which makes plotting intuitively and extensible. In Python there is a nearly one-to-one port called Lets Plot. Lets Plot has the exact syntax as ggplot2. It produces the same plots in the same way.\n\nHere is ggplot2 in R:\n\n\n\n::: {.cell}\n\n:::\n\n\n\nAnd here it is in Python using Lets Plot:\n\nThis makes it impossible to say that R is better than Python for graphics, even for someone who believes ggplot2 is the greatest graphics package there is.\n\nBut the notion that Python is better for R in production has some truth to it. When it comes to production tasks .... you can still do these things in R or Python. The capabilities exist in both.\n\n\\[demonstration\\]\n\nThe problem for R users is that production is a team sport. It will involve computer programmers who do not do data science. And when you need to collaborate with them, some of them will be able to help you with Python, but few to none of them can help you with R.\n\nDoes this mean R is entirely useless for industry jobs in data science? No.\n\nFirst, you can do everything you need to do in R. This includes data extaction, transformation, and cleaning, statistics, machine learning, and reporting. It also includes production-related tasks like...\n\nSecond, you can pass data between R and Python, let alone other platforms such as ....\n\nThis interoperability means that you can do what you want in R, then easily pass the data to Python for those production tasks that require a Python-fluent IT colleague.\n\n\\[Demonstration of R to python hand-off and vice versa\\]\n\nBig P Production vs little p production\n\nWhat can break little p in production issues?\n\n-   schema changes\n\n    -   solution\n\n        -   make friends with people whose data you rely on\n\n        -   use Great Expectations or Point Blank\n\n-   dependency changes\n\n    -   solution:\n\n        -   virtual environment\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}